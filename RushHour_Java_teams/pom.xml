<project xmlns="http://maven.apache.org/POM/4.0.0" 
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>rushhour</groupId>
    <artifactId>rushhour</artifactId>
    <version>1</version>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>19</maven.compiler.source>
        <maven.compiler.target>19</maven.compiler.target>
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-controls</artifactId>
            <version>19</version>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-fxml</artifactId>
            <version>19</version>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-media</artifactId>
            <version>19</version>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>5.4.0</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.0</version>
                <configuration>
                    <release>17</release>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.2.1</version>
                <executions>
                    <execution>
                        <id>default-cli</id>
                        <goals>
                            <goal>java</goal>
                        </goals>
                        <configuration>
                            <mainClass>rushhour.view.RushHourCLI</mainClass>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-maven-plugin</artifactId>
                <version>0.0.8</version>
                <executions>
                    <execution>
                        <id>rushhour</id>
                        <configuration>
                            <mainClass>rushhour/rushhour.view.RushHourGUI</mainClass>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <!-- JUnit 5 requires Surefire version 2.22.0 or higher -->
                <version>3.0.0-M8</version>
            </plugin>
        </plugins>
    </build>
</project>


        <!--这是一个 Maven 项目的 pom.xml 文件，用于配置和管理项目的构建、依赖和其他设置。以下是关键部分的说明：

                项目信息:

        <groupId>: 定义项目的组织或公司的唯一标识符。
        <artifactId>: 定义项目的唯一标识符，通常对应于项目的名称。
        <version>: 定义项目的版本号。
                属性设置:

                <project.build.sourceEncoding>: 指定项目源代码的字符编码。
                <maven.compiler.source>: 指定编译源代码的 Java 版本。
                <maven.compiler.target>: 指定生成的字节码的 Java 版本。
                依赖:

        使用 <dependencies> 标签定义项目的依赖关系。
        本例中包含了 JavaFX 和 JUnit 5 的依赖。
                构建插件:

        <plugins>: 包含了用于构建的插件配置。
         maven-compiler-plugin: 用于配置 Java 编译器的插件。
         exec-maven-plugin: 用于在 Maven 构建期间执行 Java 类的插件。
         javafx-maven-plugin: 用于 JavaFX 应用程序的 Maven 插件。
         maven-surefire-plugin: 用于运行测试的 Maven 插件。
                 构建配置:

         配置了编译器版本、执行类、JavaFX 主类和测试运行器。 -->